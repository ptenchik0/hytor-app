<?php

namespace common\models;

use DateTime;
use Yii;

/**
 * This is the model class for table "{{%food_order_type}}".
 *
 * @property int $food_order_type_id
 * @property int $order_id
 * @property int $order_type snidanok/obid/vecherya
 * @property int|null $serve_at chas serveryvannya
 *
 * @property FoodOrder $order
 * @property FoodOrderTypeItem[] $foodOrderTypeItems
 */
class FoodOrderType extends \yii\db\ActiveRecord
{
    const TYPE_SNIDANOK = 0;
    const TYPE_OBID = 1;
    const TYPE_VECHERYA = 2;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%food_order_type}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [[ 'order_type'], 'required'],
            [['order_id', 'order_type'], 'integer'],
            [['serve_at'], 'safe'],
            [['serve_at'], 'default', 'value' => null],
            [['order_id'], 'exist', 'skipOnError' => true, 'targetClass' => FoodOrder::className(), 'targetAttribute' => ['order_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'Food Order Type ID',
            'order_id' => 'Order ID++',
            'order_type' => 'Order Type',
            'serve_at' => 'Serve At',
        ];
    }

    /**
     * @return array food type (snidanok/obid/vecherya) list
     */
    public static function rationType()
    {
        return [
            self::TYPE_SNIDANOK => 'Сніданок',
            self::TYPE_OBID => 'Обід',
            self::TYPE_VECHERYA => 'Вечеря',
        ];
    }

    public function afterFind(){
        //$this->serve_at = $this->serve_at != null ? Yii::$app->formatter->asDatetime($this->serve_at, 'php:m/d/Y H:i:s') : null;
        $this->serve_at = $this->serve_at != null ? Yii::$app->formatter->asDatetime($this->serve_at, 'php:d/m/Y H:i') : null;
    }
    public function beforeSave($insert)
    {
        $d = DateTime::createFromFormat('d/m/Y H:i', $this->serve_at);
        $this->serve_at = Yii::$app->formatter->asTimestamp($d);

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function beforeValidate()
    {
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    /**
     * Gets query for [[Order]].
     *
     * @return \yii\db\ActiveQuery|\common\models\query\FoodOrderQuery
     */
    public function getOrder()
    {
        return $this->hasOne(FoodOrder::class, ['id' => 'order_id']);
    }

    /**
     * Gets query for [[Order][Apartment]].
     *
     * @return \yii\db\ActiveQuery|\common\models\query\FoodOrderQuery
     */
    public function getOrderWithApartment()
    {
        return $this->hasOne(FoodOrder::class, ['id' => 'order_id'])->joinWith('apartment');
    }

    /**
     * Gets query for [[FoodOrderTypeItems]].
     *
     * @return \yii\db\ActiveQuery|\common\models\query\FoodOrderTypeItemQuery
     */
    public function getFoodOrderTypeItems()
    {
        return $this->hasMany(FoodOrderTypeItem::class, ['order_type_id' => 'id']);
    }

    /**
     * {@inheritdoc}
     * @return \common\models\query\FoodOrderTypeQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\query\FoodOrderTypeQuery(get_called_class());
    }
}
